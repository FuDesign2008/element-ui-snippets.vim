extends vue


snippet eltabs "el-tabs" b
  <el-tabs
    v-model="activeName"
    type="default | card | border-card"
    tab-position="top | right | bottom | left"
    @tab-click="handleClick"
  >
    <el-tab-pane
      label="用户管理"
      name="first"
    >
      用户管理
    </el-tab-pane>
    <el-tab-pane
      name="second"
    >
      <span slot="label"><i class="el-icon-date" />配置管理</span>
      配置管理
    </el-tab-pane>
    <el-tab-pane
      label="角色管理"
      name="third"
    >
      角色管理
    </el-tab-pane>
    <el-tab-pane
      label="定时任务补偿"
      name="fourth"
    >
      定时任务补偿
    </el-tab-pane>
  </el-tabs>
endsnippet

snippet eltabsedit "el-tabs with editable attribute" b
  <template>
    <el-tabs
      v-model="editableTabsValue"
      type="card"
      editable
      @edit="handleTabsEdit"
    >
      <el-tab-pane
        v-for="(item, index) in editableTabs"
        :key="item.name"
        :label="item.title"
        :name="item.name"
      >
        {{ item.content }}
      </el-tab-pane>
    </el-tabs>
  </template>
  <script>
    export default {
      data() {
        return {
          editableTabsValue: '2',
          editableTabs: [{
            title: 'Tab 1',
            name: '1',
            content: 'Tab 1 content'
          }, {
            title: 'Tab 2',
            name: '2',
            content: 'Tab 2 content'
          }],
          tabIndex: 2
        }
      },
      methods: {
        handleTabsEdit(targetName, action) {
          if (action === 'add') {
            let newTabName = ++this.tabIndex + '';
            this.editableTabs.push({
              title: 'New Tab',
              name: newTabName,
              content: 'New Tab content'
            });
            this.editableTabsValue = newTabName;
          }
          if (action === 'remove') {
            let tabs = this.editableTabs;
            let activeName = this.editableTabsValue;
            if (activeName === targetName) {
              tabs.forEach((tab, index) => {
                if (tab.name === targetName) {
                  let nextTab = tabs[index + 1] || tabs[index - 1];
                  if (nextTab) {
                    activeName = nextTab.name;
                  }
                }
              });
            }

            this.editableTabsValue = activeName;
            this.editableTabs = tabs.filter(tab => tab.name !== targetName);
          }
        }
      }
    }
  </script>
endsnippet
