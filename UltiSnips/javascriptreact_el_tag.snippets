# extends javascriptreact

snippet eltag "el-tag with different types"
  <el-tag>标签一</el-tag>
  <el-tag
    type="success"
    size="medium"
  >
    标签二
  </el-tag>
  <el-tag
    type="info"
    size="small"
  >
    标签三
  </el-tag>
  <el-tag
    type="warning"
    size="mini"
  >
    标签四
  </el-tag>
  <el-tag type="danger">
    标签五
  </el-tag>
endsnippet

snippet eltagclose "el-tag with closable attribute"
  <el-tag
    v-for="tag in tags"
    key={ tag.name }
    closable
    type={ tag.type }
  >
    {{ tag.name }}
  </el-tag>
endsnippet

snippet eltagadd "el-tag with input to add tags"
<template>
  <div>
    <el-tag
      v-for="tag in dynamicTags"
      key={ tag }
      closable
      disable-transitions={ false }
      onClose={ this.handleClose(tag) }
    >
      {{ tag }}
    </el-tag>
    <el-input
      v-if="inputVisible"
      ref="saveTagInput"
      v-model={ this.inputValue }
      class="input-new-tag"
      size="small"
      onKeyup.enter.native={ this.handleInputConfirm }
      onBlur={ this.handleInputConfirm }
    />
    <el-button
      v-else
      class="button-new-tag"
      size="small"
      onClick={ this.showInput }
    >
      + New Tag
    </el-button>
  </div>
</template>

<style>
  .el-tag + .el-tag {
    margin-left: 10px;
  }
  .button-new-tag {
    margin-left: 10px;
    height: 32px;
    line-height: 30px;
    padding-top: 0;
    padding-bottom: 0;
  }
  .input-new-tag {
    width: 90px;
    margin-left: 10px;
    vertical-align: bottom;
  }
</style>

<script>
  export default {
    data() {
      return {
        dynamicTags: ['标签一', '标签二', '标签三'],
        inputVisible: false,
        inputValue: ''
      };
    },
    methods: {
      handleClose(tag) {
        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
      },

      showInput() {
        this.inputVisible = true;
        this.$nextTick(() => {
          this.$refs.saveTagInput.$refs.input.focus();
        });
      },

      handleInputConfirm() {
        let inputValue = this.inputValue;
        if (inputValue) {
          this.dynamicTags.push(inputValue);
        }
        this.inputVisible = false;
        this.inputValue = '';
      }
    }
  }
</script>
endsnippet
